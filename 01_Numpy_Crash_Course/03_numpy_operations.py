# -*- coding: utf-8 -*-
"""03-NumPy-Operations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_mCDjbCxp3CPgYLBZwrW-_oYrf1_VKwp

# NumPy Operations

## Arithmetic

You can easily perform *array with array* arithmetic, or *scalar with array* arithmetic. Let's see some examples:
"""

import numpy as np
arr = np.arange(0,10)
arr

# soma com escalar
arr + 5

# neste caso, os arrays tem que ter o mesmo shape
arr + arr

arr * arr

arr - arr

# neste caso, aparece um aviso alertando uma divisão por 0, mas não um erro
# It just fills the spot with nan
arr/arr

# também um alerta, mas não um erro, com uma divisão por 0
1/arr

# elevado ao cubo
arr**3

"""## Universal Array Functions

NumPy comes with many [universal array functions](http://docs.scipy.org/doc/numpy/reference/ufuncs.html), or <em>ufuncs</em>, which are essentially just mathematical operations that can be applied across the array.<br>Let's show some common ones:
"""

# raiz quadrada
np.sqrt(arr)

# funções trigonométricas
np.sin(arr)

# Calculating exponential (e^)
np.exp(arr)

# logarítimo natural (ln)
np.log(arr)

"""## Summary Statistics on Arrays

NumPy also offers common summary statistics like <em>sum</em>, <em>mean</em> and <em>max</em>. You would call these as methods on an array.
"""

arr = np.arange(0,10)
arr

# somatório
arr.sum()

# média
arr.mean()

# máximo
arr.max()

# variância
arr.var()

# desvio padrão
arr.std()

"""## Axis Logic
When working with 2-dimensional arrays (matrices) we have to consider rows and columns. This becomes very important when we get to the section on pandas. In array terms, axis 0 (zero) is the vertical axis (rows), and axis 1 is the horizonal axis (columns). These values (0,1) correspond to the order in which <tt>arr.shape</tt> values are returned.

Let's see how this affects our summary statistic calculations from above.
"""

arr_2d = np.arange(0,25).reshape(5,5)
arr_2d

arr_2d.sum()

# somar as coluna
arr_2d.sum(axis=0)

# somar as linha
arr_2d.sum(axis=1)