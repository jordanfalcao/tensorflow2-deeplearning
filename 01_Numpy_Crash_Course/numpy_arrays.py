# -*- coding: utf-8 -*-
"""NumPy-Arrays.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15Mt9oT0v3j4We0bgwK3CrxOD3mIU8zZk

# NumPy Arrays
"""

import numpy as np

# lista
mylist = [1, 2, 3]
mylist

# criando array numpy
np.array(mylist)

nested_list = [[1,2], [3,4], [5,6]]
nested_list

# numpy array de nested list
np.array(nested_list)

"""## Built-in Methods

### arange
"""

# np.arange(start, stop, step, dtype) [x, y)
np.arange(0, 10)

# step = 2
np.arange(0, 10, 2)

"""### zeros and ones

Generate arrays of zeros or ones. [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.zeros.html)]
"""

# cria matriz de zeros
np.zeros(3)

# inserindo o shape
np.zeros((4,8))

# matriz de '1'
np.ones(2)

# shape
np.ones((3,9))

"""### linspace 
Return evenly spaced numbers over a specified interval. [[reference](https://www.numpy.org/devdocs/reference/generated/numpy.linspace.html)]
"""

# np.linspace(start, stop, interval) [intervalos fechados]
np.linspace(0, 10, 3)

# inclui o stop point, atenção para adicionar uma unidade pro intervalo ficar simétrico
np.linspace(0, 10, 21)

# matriz identidade
np.eye(5)

"""## Random 
Numpy also has lots of ways to create random number arrays:

### rand
Creates an array of the given shape and populates it with random samples from a uniform distribution over ``[0, 1)``. [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.rand.html)]
"""

# cria um array com valores aleatórios e o shape atribuido, entre [0, 1)
np.random.rand(2)

# matriz
np.random.rand(3, 4)

"""### randn

Returns a sample (or samples) from the "standard normal" distribution [σ = 1]. Unlike **rand** which is uniform, values closer to zero are more likely to appear. [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.randn.html)]
"""

# mesma função acima, mas seguindo uma distribuição normal: média = 0 e variÂncia = 1
np.random.randn(5, 5)

"""### randint
Returns random integers from `low` (inclusive) to `high` (exclusive).  [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.randint.html)]
"""

# um inteiro entre [1, 100)
np.random.randint(1,100)

# 10 números inteiros
np.random.randint(1,100,10)

# matriz
np.random.randint(1,100,(3, 5))

"""### seed
Can be used to set the random state, so that the same "random" results can be reproduced. [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.seed.html)]
"""

# lançando uma semente, sempre teremos o mesmo resultado, para que possa ser replicado
# deve estar na mesma célula para funcionar 
np.random.seed(42)
np.random.rand(4)

np.arange(25)

"""## Array Attributes and Methods

Let's discuss some useful attributes and methods for an array:
"""

# criando dois arrays
arr = np.arange(25)
ranarr = np.random.randint(0,50,10)

arr

ranarr

"""## Reshape
Returns an array containing the same data with a new shape. [[reference](https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.reshape.html)]
"""

# reorganiza o array
arr.reshape(5,5)

"""### max, min, argmax, argmin

These are useful methods for finding max or min values. Or to find their index locations using argmin or argmax
"""

# valor máximo
ranarr.max()

# mínimo 
ranarr.min()

# posição do mínimo
ranarr.argmin()

# posição do máximo
ranarr.argmax()

