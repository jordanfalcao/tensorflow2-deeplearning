# -*- coding: utf-8 -*-
"""03-Missing-Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zVnmDMZGkVR_nFAlXSjLlVl4RV-UWO8s

# Missing Data

Let's show a few convenient methods to deal with Missing Data in pandas:
"""

import numpy as np
import pandas as pd

# criando DF
df = pd.DataFrame({'A':[1,2,np.nan,4],
                  'B':[5,np.nan,np.nan,8],
                  'C':[10,20,30,40]})

df

"""## Removing missing data"""

# 'axis = 0' é default, remove as linhas com dados nulos
df.dropna()

# 'axis = 1' remove as colunas com valores nulos
df.dropna(axis = 1)

df

"""### Threshold (Require that many non-NA values.)"""

# parâmetro 'thresh' determina o limita mínimo de valores não-nulos para excluir a linha
df.dropna(thresh=2)  # linha 2 só tem 1 valor não-nulo

# thresh = 3, pelo menos 3 valores não-nulos
df.dropna(axis = 1, thresh = 3) # coluna B só tinha 2 valores não-nulos

"""## Filling in missing data"""

df

# preencher com o 'value' indicado
df.fillna(value = 'FILL NULL')  # os números ficam como string

# preencher com o 'value' indicado
df.fillna(value = 0)  # os '0' preenchidos viram floats

# podemos preencher apenas a coluna especificada
df['A'] = df['A'].fillna(0) # nesse caso, alteramos permanentemente

df

# alterando com o valor da média da coluna B
df['B'].fillna(df['B'].mean())

# criando o DF novamente para visuzlizar como funciona o preenchimento de todo os DF
df = pd.DataFrame({'A':[1,2,np.nan,4],
                  'B':[5,np.nan,np.nan,8],
                  'C':[10,20,30,40]})
df

# podemos neste caso, Pandas preenche com a média de CADA COLUNA
df.fillna(df.mean()) # A.mean() = 2.333 e B.mean() = 6.5