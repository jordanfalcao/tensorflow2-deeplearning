# -*- coding: utf-8 -*-
"""02-Seaborn-Basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15IinZAfIbOjdpjkSlCDrSqoKt7CrvmDX

# Seaborn Basics

Here we will focus on some very basic

## The Data

Context

This database contains 76 attributes, but all published experiments refer to using a subset of 14 of them. In particular, the Cleveland database is the only one that has been used by ML researchers to this date. The "goal" field refers to the presence of heart disease in the patient. It is integer valued from 0 (no presence) to 4.

Columns
* age  age in years
* sex  (1 = male; 0 = female)
* cp  chest pain type
* trestbps   resting blood pressure (in mm Hg on admission to the hospital)
* cholserum   cholestoral in mg/dl
* fbs(fasting blood sugar > 120 mg/dl) (1 = true; 0 = false)
* restecg   resting electrocardiographic results
* thalach   maximum heart rate achieved
* exang    exercise induced angina (1 = yes; 0 = no)
* oldpeak   ST depression induced by exercise relative to rest
* slope    the slope of the peak exercise ST segment
* ca    number of major vessels (0-3) colored by flourosopy
* thal3 = normal; 6 = fixed defect; 7 = reversable defect
* target   1 or 0
"""

import pandas as pd
import matplotlib.pyplot as plt

import seaborn as sns

df = pd.read_csv('heart.csv')

df.head()

"""## Distribution Plots"""

# histograma
plt.figure(figsize = (8,5))
sns.distplot(df['age']);

# removendo linha de estimação de densidade
plt.figure(figsize = (8,5))
sns.distplot(df['age'], kde = False);

# bins and color
plt.figure(figsize = (8,5))
sns.distplot(df['age'], kde = False, bins = 15, color = 'r');

"""# Count Plot"""

df.head()

sns.countplot(x = 'sex', data = df)

# quantas pessoas tem doenças ou não
sns.countplot(x = 'target', data = df)

# adicionando outra variável
sns.countplot(x='cp',data=df, hue = 'sex', palette='terrain')

"""## Box Plot

Box plots show the distributions across different categories.
"""

# distribuição das idades separadas por sexo
sns.boxplot(x='sex',y='age',data=df); # y: contínua, x: categórica

sns.boxplot(x='target',y='thalach',data=df);

# separado por outra categoria
sns.boxplot(x='target',y='thalach',data=df,hue='sex');

"""## Scatter  Plots

Scatter plots display the relationship between two continuous features.

https://seaborn.pydata.org/generated/seaborn.scatterplot.html
"""

sns.scatterplot(x='chol',y='trestbps',data=df);

# separando por categoria
sns.scatterplot(x='chol',y='trestbps',data=df, hue = 'sex');

# mudando palette
sns.scatterplot(x='chol',y='trestbps',data=df,hue='sex',palette='Dark2');

# tamando dos pontos por categoria
plt.figure(figsize=(10,5))
sns.scatterplot(x='chol',y='trestbps',data=df,hue='sex',palette='Dark2', size = 'age');

"""## Pairplots

Pairplots perform scatterplots and histograms for every single column in your data set. This means it could be a huge plot for large datasets! Use with caution, as it could take a long time for large datasets and the figures could be too small!

INFO: https://seaborn.pydata.org/generated/seaborn.pairplot.html
"""

iris = pd.read_csv('iris.csv')

iris.head()

# plot um scatter entre as variáveis e também a distribuição de cada uma
sns.pairplot(iris);

# hue shows KDEs instead of histograms along the diagonal
sns.pairplot(iris, hue="species");

# para grandes dataset, podemos limitar as variáveis no pairplot
plt.figure(figsize=(10,5))
sns.pairplot(iris, y_vars= 'sepal_length', x_vars = ['sepal_width', 'petal_length'], kind = 'reg', hue = 'species', height=5);