# -*- coding: utf-8 -*-
"""03-Visualization-Exercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g-PGZOYZE5EGcYjnar_5OOw31qSfpl2a

<a href='http://www.pieriandata.com'><img src='../Pierian_Data_Logo.png'/></a>
___
<center><em>Copyright Pierian Data</em></center>
<center><em>For more information, visit us at <a href='http://www.pieriandata.com'>www.pieriandata.com</a></em></center>

# Visualization Exercise 

## The Data

This classic dataset contains the prices and other attributes of almost 54,000 diamonds. It's a great dataset for beginners learning to work with data analysis and visualization.

#### Content

* price price in US dollars (\$326--\$18,823)

* carat weight of the diamond (0.2--5.01)

* cut quality of the cut (Fair, Good, Very Good, Premium, Ideal)

* color diamond colour, from J (worst) to D (best)

* clarity a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))

* x length in mm (0--10.74)

* y width in mm (0--58.9)

* z depth in mm (0--31.8)
 
* depth total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43--79)

* table width of top of diamond relative to widest point (43--95)

## Imports and Data
"""

import pandas as pd
import matplotlib.pyplot as plt

import seaborn as sns

diamonds = pd.read_csv('diamonds.csv')

diamonds.head()

diamonds.info()

"""#### TASK: Create a scatterplot of price versus carat as shown below"""

# CODE HERE
sns.scatterplot(x = 'carat', y = 'price', data = diamonds);



"""#### TASK: Use alpha parameter and edgecolor parameter to deal with the overlapping issue and white edgemarker issue."""

# CODE HERE
sns.scatterplot(x = 'carat', y = 'price', data = diamonds, alpha=0.1, edgecolor=None);



"""#### TASK: Make the previous plot larger"""

# CODE HERE
plt.figure(figsize=(12,8))
sns.scatterplot(x = 'carat', y = 'price', data = diamonds, alpha=0.1, edgecolor=None);



"""#### TASK: Create a histogram of the price column as shown below"""

# CODE HERE
plt.figure(figsize=(12,8))
plt.xlim(0, 18000)
sns.distplot(diamonds['price'], kde = False);



"""#### TASK: Create a count plot of the instances per cut type as shown below"""

# CODE HERE
sns.countplot(x = 'cut', data=diamonds);



"""#### TASK: Create a large box plot figure showing the price distribution per cut type as shown below"""

# CODE HERE
plt.figure(figsize=(12,8))
sns.boxplot(x = 'cut', y = 'price', data = diamonds);



"""#### TASK: Challenge! See if you can figure out how to change the ordering of the boxplot as shown below. Feel free to also chaneg the coloring, to reflect this relationship between the cut types."""

# CODE HERE
plt.figure(figsize=(12,8))
sns.boxplot(x = 'cut', y = 'price', data = diamonds, order=['Fair', 'Ideal', 'Good', 'Very Good', 'Premium'], palette='coolwarm'); # palette = 'cool'

